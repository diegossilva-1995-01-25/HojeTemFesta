package control;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;

import dao.DAOConexaoBD;
import interfaces.Buscavel;
import model.Membro;

/*
 * Autor: Diego Souza Silva
 * Data: 28/06/2017
 */

public class CtrMembro implements Buscavel, TableModel {
	private Membro m;
	private List<Membro> listaDeMembros;
	private Connection conex;
	
	public CtrMembro() {
		m = new Membro();
		listaDeMembros = new ArrayList<>();
		conex = DAOConexaoBD.instanciarDAO().obterConexao();
	}
	
	public void adicionarMembro(Membro m) {
		String sql = "INSERT INTO membro (id, nome, apelido, sobrenomes, cargo, dia, mes, ano)"
				+ " VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
		
		try {
			PreparedStatement preparado = conex.prepareStatement(sql);
			preparado.setInt(1, m.getIdMembro());
			preparado.setString(2, m.getNome());
			preparado.setString(3, m.getApelido());
			preparado.setString(4, m.getSobrenomes());
			preparado.setString(5, m.getCargo());
			preparado.setInt(6, m.getDia());
			preparado.setInt(7, m.getMes());
			preparado.setInt(8, m.getAno());
			preparado.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(null, "Erro de Banco de Dados:\n" + e.getMessage());
		}
		
		
	}
	
	public void alterarMembro(Membro m) {
		String sql = "UPDATE membro SET id = ?, nome = ?, apelido = ?, sobrenomes = ?, cargo = ?,"
				+ " dia = ?, mes = ?, ano = ? WHERE id = ?";
		
		try {
			PreparedStatement preparado = conex.prepareStatement(sql);
			preparado.setInt(1, m.getIdMembro());
			preparado.setString(2, m.getNome());
			preparado.setString(3, m.getApelido());
			preparado.setString(4, m.getSobrenomes());
			preparado.setString(5, m.getCargo());
			preparado.setInt(6, m.getDia());
			preparado.setInt(7, m.getMes());
			preparado.setInt(8, m.getAno());
			preparado.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(null, "Erro de Banco de Dados:\n" + e.getMessage());
		}
	}
	
	@Override
	public List<Membro> consultarMembro(String entrada) {
		listaDeMembros = new ArrayList<>();
		String sql = "SELECT * FROM membro where nome LIKE ?";
		
		try {
			PreparedStatement preparado = conex.prepareStatement(sql);
			preparado.setString(1, "%" + entrada + "%");
			ResultSet todos = preparado.executeQuery();
			
			while(todos.next()) {
				
				Membro membro = new Membro();
				
				membro.setIdMembro(todos.getInt("id"));
				membro.setNome(todos.getString("nome"));
				membro.setApelido(todos.getString("apelido"));
				membro.setSobrenomes(todos.getString("sobrenomes"));
				membro.setCargo(todos.getString("cargo"));
				membro.setDia(todos.getInt("dia"));
				membro.setMes(todos.getInt("mes"));
				membro.setAno(todos.getInt("ano"));
				listaDeMembros.add(membro);
				
			}
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(null, "Erro de Banco de Dados:\n" + e.getMessage());
		}
		
		
		return listaDeMembros;
		
	}

	public void excluirMembro(Membro m) {
		String sql = "DELETE FROM membro WHERE id = ?";
		
		try {
			PreparedStatement preparado = conex.prepareStatement(sql);
			preparado.setInt(1, m.getIdMembro());
			preparado.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			JOptionPane.showMessageDialog(null, "Erro de Banco de Dados:\n" + e.getMessage());
		}
		
	}

	@Override
	public List<Membro> buscarAniversariantes() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public String exibirEmTela(Membro m) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void addTableModelListener(TableModelListener l) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Class<?> getColumnClass(int columnIndex) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getColumnCount() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public String getColumnName(int columnIndex) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public int getRowCount() {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public Object getValueAt(int rowIndex, int columnIndex) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public boolean isCellEditable(int rowIndex, int columnIndex) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void removeTableModelListener(TableModelListener l) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
		// TODO Auto-generated method stub
		
	}
	
}
